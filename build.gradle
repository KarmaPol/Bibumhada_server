plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' //Spring Rest docs
}
configurations {
	asciidoctorExt
}

group = 'com.bibumhada'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')}

dependencies {
	//spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.projectlombok:lombok')
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	//db
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	//test
	testImplementation('org.junit.jupiter:junit-jupiter:5.7.0')
	testAnnotationProcessor('org.projectlombok:lombok')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	//webflux for webclient
	implementation group: 'org.springframework', name: 'spring-webflux', version: '6.0.11'

	//queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//sentry
	implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.1.0'
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}


